package logpro;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;



public class Main extends JFrame implements ActionListener{
	
	private TextField t1;
	private JButton b1, b2;
	private JLabel e1, log, pass;
	private JPasswordField t2;
	
	List<User> l = new LinkedList<>();
	
	static Main m = new Main();
	
	public Main(){
		
		setSize(500, 500);
		setTitle("Asura Martial Wars");
		setLocation(1000, 150);
		setResizable(false);
		setBackground(new Color(102, 102, 102));
		
		setLayout(null);
		
		
		t1 = new TextField();
		t1.setBounds(150, 130, 200, 30);
		add(t1);
		
		t2 = new JPasswordField();
		t2.setBounds(150, 190, 200, 30);
		add(t2);
		
		b1 = new JButton("Zaloguj");
		b1.setBounds(140, 260, 100, 30);
		b1.addActionListener(this);
		add(b1);
		
		b2 = new JButton("Zamknij");
		b2.setBounds(260, 260, 100, 30);
		b2.addActionListener(this);
		add(b2);
		
		e1 = new JLabel("");
		e1.setBounds(200, 340, 150, 30);
		add(e1);
		
		log = new JLabel("Login:");
		log.setBounds(90, 130, 60, 30);
		add(log);
		
		pass = new JLabel("Password:");
		pass.setBounds(67, 190, 70, 30);
		add(pass);
	}

	public void paint(Graphics g) {
		// TODO Auto-generated method stub
		super.paint(g);
		
		g.setColor(new Color(102, 102, 102));
		g.setFont(new Font("Times New Roman", Font.BOLD, 30));
		g.drawString("Asura Martial Wars", 130, 100);
		
	}
	
	
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
		Object s = e.getSource();
		
		
		if(s == b1){
			
			if(t1.getText().length() > 0 && t2.getPassword().length > 0){
				
				
				char[] c;
			    c = t2.getPassword();
				
				String hash = "";
				
				for(int i=0; i<t2.getPassword().length; i++)
					hash += c[i];
				
				for(User p : l){
					
				if(t1.getText().equals(p.getNickname()) && hash.equals(p.getPassword())){
					
				User u = new User(p.getNickname(), p.getID());
				
				if(u.isShowing())
					 m.setVisible(false);
		
					
				e1.setVisible(false);
				}
				else
				     e1.setText("User nie istnieje");
			  }
				
			}
			else
		       e1.setText("Zbyt krotki login lub haslo");		
	}
		
		if(s == b2)
			this.dispose();
	}

	public void ustawUserow(){
		
		User kam = new User(1, "us1", "qw");
		User gra = new User(2, "us2", "qw");
		User pio = new User(3, "us3", "qw");
		
		l.add(kam);
		l.add(gra);
		l.add(pio);
		
	}
	
	class User extends JFrame implements ActionListener{

		private int id;
		private String nickname, password;
		private boolean f = false;
		private JLabel et1;
		private JButton b1, b2;
		private int IdenUser;
		private JMenuItem opis, profil;
		
		public User(String user, int iden){
			
			IdenUser = iden;
			
			setSize(500, 500);
			setVisible(true);
			setLocation(600, 160);
			setTitle("Asura Martial Wars");
			setResizable(false);
			
			setLayout(null);
			
			et1 = new JLabel("Witaj uzytkowniku "+ user + "!");
			et1.setBounds(150, 150, 160, 30);
			add(et1);
			
			b1 = new JButton("Close");
			b1.setBounds(200, 270, 80, 30);
			b1.addActionListener(this);
			add(b1);
			
			b2 = new JButton("Back");
			b2.setBounds(300, 300, 80, 30);
			b2.setVisible(false);
			b2.addActionListener(this);
			add(b2);
			
			JMenuBar mb;
			JMenu m;
			
			mb = new JMenuBar();
			mb.setBounds(0, 0, 490, 30);
			add(mb);
			
			m = new JMenu("User");
			mb.add(m);
			
			profil = new JMenuItem("Profil");
			profil.addActionListener(this);
			m.add(profil);
			
			opis = new JMenuItem("O Grze");
			opis.addActionListener(this);
			m.add(opis);
			
		}

		
		@Override
		public void actionPerformed(ActionEvent e) {
			// TODO Auto-generated method stub
			
			Object s = e.getSource();
			
			if(s == b1){
				
				this.dispose();
				
				if(this.isShowing() == false)
					m.setVisible(true);
			}
			else if(s == opis){
				
				JOptionPane.showMessageDialog(null, "Versia 1.0");
				
			}
			else if(s == profil){
				
				f = true;
				et1.setVisible(false);
				b1.setVisible(false);
				b2.setVisible(true);
				repaint();
			}
			else if(s == b2){
				
				et1.setVisible(true);
				b1.setVisible(true);
				b2.setVisible(false);
				f = false;
				repaint();
	
			}
			
		}
		
		public void paint(Graphics g){
			
			super.paint(g);
			
			if(f){
			g.drawLine(10, 100, 450, 100);
			g.drawLine(10, 200, 450, 200);
			}
			
			

		}
		
		public User(int id, String nickname, String password){
			this.id = id;
			this.nickname = nickname;
			this.password = password;
		}
		
		public int getID(){
			return id;
		}
		
		public String getNickname(){
			return nickname;
		}
		
		public String getPassword(){
			return password;
		}
		
	}

	public static void main(String[] args) {
		
		//Main m = new Main();
		m.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		m.setVisible(true);
		m.ustawUserow();
		
	
	}

}



